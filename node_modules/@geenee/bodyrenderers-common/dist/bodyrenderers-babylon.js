import{ShaderProgram as h,VideoPlugin as v}from'@geenee/armature';import{meshDesc as d,meshTriangles as p}from'@geenee/bodytracking';const T=['hips','spine','spine1','spine2','neck','head','headEnd','shoulderL','shoulderR','armL','armR','foreArmL','foreArmR','handL','handR','upLegL','upLegR','legL','legR','footL','footR','toeL','toeR'];function K(N){return Object['fromEntries'](T['map'](C=>[C,N(C)]));}class s extends h{constructor(N,C,Q=0x1){super(N,C,['image'],{'size':'2f','flip':'1f'},'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20precision\x20mediump\x20float;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20varying\x20vec2\x20coords;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20vec2\x20size;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20sampler2D\x20image;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20res\x20=\x20texture2D(image,\x20coords).r;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20x\x20=\x20-'+Q+';\x20x\x20<=\x20'+Q+';\x20x++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-'+Q+';\x20y\x20<=\x20'+Q+';\x20y++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20res\x20=\x20max(res,\x20texture2D(image,\x20coords\x20+\x20vec2(x,\x20y)\x20/\x20size).r);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(res,\x20res,\x20res,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}',void 0x0,!0x0);}}class t extends v{async['update'](N,C){const Q=N['poses']&&N['poses']['length']>0x0?N['poses'][0x0]:void 0x0,{videoCtx:A}=this;if(!Q||!A)return super['update'](N,C);const {points:w,debug:c}=Q,{width:J,height:r}=A['canvas'];if(A['fillStyle']='rgba(55,\x20145,\x20116,\x200.75)',A['strokeStyle']='rgba(27,\x2074,\x2059,\x200.95)',A['lineWidth']=0x2,Object['values'](w)['forEach'](z=>{z['score']<0.5||(A['beginPath'](),A['arc'](z['pixel'][0x0]*J,z['pixel'][0x1]*r,0x6,0x0,0x2*Math['PI']),A['fill'](),A['stroke']());}),A['strokeStyle']='rgba(43,\x20114,\x20135,\x200.75)',A['lineWidth']=0x4,this['drawPath'](A,J,r,[w['shoulderL'],w['shoulderR'],w['hipR'],w['hipL']],!0x0),this['drawPath'](A,J,r,[w['shoulderR'],w['elbowL'],w['wristL']]),this['drawPath'](A,J,r,[w['shoulderR'],w['elbowR'],w['wristR']]),this['drawPath'](A,J,r,[w['hipL'],w['kneeL'],w['ankleL']]),this['drawPath'](A,J,r,[w['hipR'],w['kneeR'],w['ankleR']]),!c)return;const V=[(c['top'][0x0]-c['center'][0x0])*J,(c['top'][0x1]-c['center'][0x1])*r],O=Math['sqrt'](V[0x0]*V[0x0]+V[0x1]*V[0x1]);A['fillStyle']='rgba(235,\x2072,\x200,\x200.3)',A['strokeStyle']='rgba(105,\x2031,\x200,\x200.85)',A['lineWidth']=0x4,A['beginPath'](),A['arc'](c['center'][0x0]*J,c['center'][0x1]*r,O,0x0,0x2*Math['PI']),A['fill'](),A['stroke'](),A['beginPath'](),A['moveTo'](c['center'][0x0]*J,c['center'][0x1]*r),A['lineTo'](c['top'][0x0]*J,c['top'][0x1]*r),A['stroke']();}['drawPath'](N,C,Q,A,w){const c=new Path2D();c['moveTo'](A[0x0]['pixel'][0x0]*C,A[0x0]['pixel'][0x1]*Q);for(let J=0x1;J<A['length'];J++)A[J]['score']>0.5&&A[J-0x1]['score']>0.5?c['lineTo'](A[J]['pixel'][0x0]*C,A[J]['pixel'][0x1]*Q):c['moveTo'](A[J]['pixel'][0x0]*C,A[J]['pixel'][0x1]*Q);w&&A[0x0]['score']>0.5&&A[A['length']-0x1]['score']>0.5&&c['closePath'](),N['stroke'](c);}}class D extends v{async['update'](N,C){const Q=N['faces']&&N['faces']['length']>0x0?N['faces'][0x0]['mesh']:void 0x0,{videoCtx:A}=this;if(!Q||!A)return super['update'](N,C);const {width:w,height:J}=A['canvas'];Q['keypoints']['forEach'](H=>A['fillRect'](H[0x0]*w-0x2,H[0x1]*J-0x2,0x4,0x4)),A['lineWidth']=0x4,A['strokeStyle']='rgba(93,\x20111,\x20227,\x200.75)';const V=[...d['lipsLowerOuter']]['reverse']();this['drawPath'](A,[...d['lipsUpperOuter'],...V]['map'](H=>Q['keypoints'][H]),!0x0);const O=[...d['lipsLowerInner']]['reverse']();this['drawPath'](A,[...d['lipsUpperInner'],...O]['map'](H=>Q['keypoints'][H]),!0x0),A['strokeStyle']='rgba(172,\x20110,\x20255,\x200.75)';const z=[...d['rightEyeLower0']]['reverse']();this['drawPath'](A,[...d['rightEyeUpper0'],...z]['map'](H=>Q['keypoints'][H]),!0x0);const Z=[...d['rightEyeLower1']]['reverse']();this['drawPath'](A,[...d['rightEyeUpper1'],...Z]['map'](H=>Q['keypoints'][H]),!0x0);const X=[...d['leftEyeLower0']]['reverse']();this['drawPath'](A,[...d['leftEyeUpper0'],...X]['map'](H=>Q['keypoints'][H]),!0x0);const Y=[...d['leftEyeLower1']]['reverse']();this['drawPath'](A,[...d['leftEyeUpper1'],...Y]['map'](H=>Q['keypoints'][H]),!0x0),A['strokeStyle']='rgba(94,\x20214,\x20202,\x200.75)';const M=[...d['rightEyebrowLower']]['reverse']();this['drawPath'](A,[...d['rightEyebrowUpper'],...M]['map'](H=>Q['keypoints'][H]),!0x0);const G=[...d['leftEyebrowLower']]['reverse']();if(this['drawPath'](A,[...d['leftEyebrowUpper'],...G]['map'](H=>Q['keypoints'][H]),!0x0),Q['keypoints']['length']>0x1d4){A['strokeStyle']='rgba(218,\x2060,\x20202,\x200.75)',this['drawPath'](A,[...d['rightEyeIris']['slice'](0x1)]['map'](j=>Q['keypoints'][j]),!0x0),this['drawPath'](A,[...d['leftEyeIris']['slice'](0x1)]['map'](j=>Q['keypoints'][j]),!0x0);const H=Q['keypoints'][d['rightEyeIris'][0x0]],W=Q['keypoints'][d['leftEyeIris'][0x0]],{width:U,height:q}=A['canvas'];A['beginPath'](),A['ellipse'](H[0x0]*U,H[0x1]*q,0x3,0x3,0x0,0x0,0x2*Math['PI']),A['stroke'](),A['beginPath'](),A['ellipse'](W[0x0]*U,W[0x1]*q,0x3,0x3,0x0,0x0,0x2*Math['PI']),A['stroke']();}A['lineWidth']=0.5,A['strokeStyle']='rgba(180,\x20180,\x20180,\x200.75)';for(let j=0x0;j<p['length']/0x3;j++){const B=[p[j*0x3],p[j*0x3+0x1],p[j*0x3+0x2]]['map'](F=>Q['keypoints'][F]);this['drawPath'](A,B,!0x0);}return super['update'](N,C);}['drawPath'](N,C,Q){const {width:A,height:w}=N['canvas'],c=new Path2D();c['moveTo'](C[0x0][0x0]*A,C[0x0][0x1]*w);for(let J=0x1;J<C['length'];J++)c['lineTo'](C[J][0x0]*A,C[J][0x1]*w);Q&&c['closePath'](),N['stroke'](c);}}export{T as BoneList,s as DilationShader,D as FaceDebugPlugin,t as PoseDebugPlugin,K as mapSkeleton};
